{"ast":null,"code":"// save-agri-frontend/src/services/authService.js\nconst INACTIVITY_TIMEOUT = 30 * 60 * 1000;\nlet inactivityTimer = null;\nlet tokenExpiryTimer = null;\nconst authService = {\n  login: (userData, token) => {\n    console.log(\"Données utilisateur à stocker:\", userData);\n    sessionStorage.setItem('user', JSON.stringify(userData));\n    sessionStorage.setItem('token', token);\n    authService.startInactivityTimer();\n  },\n  logout: () => {\n    sessionStorage.removeItem('user');\n    sessionStorage.removeItem('token');\n    authService.clearTimers();\n  },\n  startInactivityTimer: () => {\n    authService.resetInactivityTimer();\n    // Ajouter l'écouteur d'événements pour réinitialiser le timer\n    document.addEventListener('mousemove', authService.resetInactivityTimer);\n  },\n  // Ajout de la méthode resetInactivityTimer\n  resetInactivityTimer: () => {\n    if (inactivityTimer) {\n      clearTimeout(inactivityTimer);\n    }\n    inactivityTimer = setTimeout(() => {\n      authService.logout();\n    }, INACTIVITY_TIMEOUT);\n  },\n  clearTimers: () => {\n    if (inactivityTimer) {\n      clearTimeout(inactivityTimer);\n      document.removeEventListener('mousemove', authService.resetInactivityTimer);\n    }\n    if (tokenExpiryTimer) {\n      clearTimeout(tokenExpiryTimer);\n    }\n  },\n  isAuthenticated: () => {\n    const token = sessionStorage.getItem('token');\n    return !!token;\n  },\n  getToken: () => {\n    return sessionStorage.getItem('token');\n  },\n  getCurrentUser: () => {\n    const userStr = sessionStorage.getItem('user'); // Changez setItem en getItem\n    const user = userStr ? JSON.parse(userStr) : null;\n    console.log(\"Utilisateur récupéré:\", user);\n    return user;\n  }\n};\nexport default authService;","map":{"version":3,"names":["INACTIVITY_TIMEOUT","inactivityTimer","tokenExpiryTimer","authService","login","userData","token","console","log","sessionStorage","setItem","JSON","stringify","startInactivityTimer","logout","removeItem","clearTimers","resetInactivityTimer","document","addEventListener","clearTimeout","setTimeout","removeEventListener","isAuthenticated","getItem","getToken","getCurrentUser","userStr","user","parse"],"sources":["/home/derfm53/save-agri/save-agri-frontend/src/services/authService.js"],"sourcesContent":["// save-agri-frontend/src/services/authService.js\nconst INACTIVITY_TIMEOUT = 30 * 60 * 1000;\n\nlet inactivityTimer = null;\nlet tokenExpiryTimer = null;\n\nconst authService = {\n  login: (userData, token) => {\n    console.log(\"Données utilisateur à stocker:\", userData);\n    sessionStorage.setItem('user', JSON.stringify(userData));\n    sessionStorage.setItem('token', token);\n    authService.startInactivityTimer();\n  },\n\n  logout: () => {\n    sessionStorage.removeItem('user');\n    sessionStorage.removeItem('token');\n    authService.clearTimers();\n  },\n\n  startInactivityTimer: () => {\n    authService.resetInactivityTimer();\n    // Ajouter l'écouteur d'événements pour réinitialiser le timer\n    document.addEventListener('mousemove', authService.resetInactivityTimer);\n  },\n\n  // Ajout de la méthode resetInactivityTimer\n  resetInactivityTimer: () => {\n    if (inactivityTimer) {\n      clearTimeout(inactivityTimer);\n    }\n    inactivityTimer = setTimeout(() => {\n      authService.logout();\n    }, INACTIVITY_TIMEOUT);\n  },\n\n  clearTimers: () => {\n    if (inactivityTimer) {\n      clearTimeout(inactivityTimer);\n      document.removeEventListener('mousemove', authService.resetInactivityTimer);\n    }\n    if (tokenExpiryTimer) {\n      clearTimeout(tokenExpiryTimer);\n    }\n  },\n\n  isAuthenticated: () => {\n    const token = sessionStorage.getItem('token');\n    return !!token;\n  },\n\n  getToken: () => {\n    return sessionStorage.getItem('token');\n  },\n\n  getCurrentUser: () => {\n    const userStr = sessionStorage.getItem('user'); // Changez setItem en getItem\n    const user = userStr ? JSON.parse(userStr) : null;\n    console.log(\"Utilisateur récupéré:\", user);\n    return user;\n  }\n};\n\nexport default authService;"],"mappings":"AAAA;AACA,MAAMA,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AAEzC,IAAIC,eAAe,GAAG,IAAI;AAC1B,IAAIC,gBAAgB,GAAG,IAAI;AAE3B,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,QAAQ,CAAC;IACvDI,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,CAAC;IACxDI,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACtCH,WAAW,CAACU,oBAAoB,CAAC,CAAC;EACpC,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZL,cAAc,CAACM,UAAU,CAAC,MAAM,CAAC;IACjCN,cAAc,CAACM,UAAU,CAAC,OAAO,CAAC;IAClCZ,WAAW,CAACa,WAAW,CAAC,CAAC;EAC3B,CAAC;EAEDH,oBAAoB,EAAEA,CAAA,KAAM;IAC1BV,WAAW,CAACc,oBAAoB,CAAC,CAAC;IAClC;IACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEhB,WAAW,CAACc,oBAAoB,CAAC;EAC1E,CAAC;EAED;EACAA,oBAAoB,EAAEA,CAAA,KAAM;IAC1B,IAAIhB,eAAe,EAAE;MACnBmB,YAAY,CAACnB,eAAe,CAAC;IAC/B;IACAA,eAAe,GAAGoB,UAAU,CAAC,MAAM;MACjClB,WAAW,CAACW,MAAM,CAAC,CAAC;IACtB,CAAC,EAAEd,kBAAkB,CAAC;EACxB,CAAC;EAEDgB,WAAW,EAAEA,CAAA,KAAM;IACjB,IAAIf,eAAe,EAAE;MACnBmB,YAAY,CAACnB,eAAe,CAAC;MAC7BiB,QAAQ,CAACI,mBAAmB,CAAC,WAAW,EAAEnB,WAAW,CAACc,oBAAoB,CAAC;IAC7E;IACA,IAAIf,gBAAgB,EAAE;MACpBkB,YAAY,CAAClB,gBAAgB,CAAC;IAChC;EACF,CAAC;EAEDqB,eAAe,EAAEA,CAAA,KAAM;IACrB,MAAMjB,KAAK,GAAGG,cAAc,CAACe,OAAO,CAAC,OAAO,CAAC;IAC7C,OAAO,CAAC,CAAClB,KAAK;EAChB,CAAC;EAEDmB,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOhB,cAAc,CAACe,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EAEDE,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAGlB,cAAc,CAACe,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAChD,MAAMI,IAAI,GAAGD,OAAO,GAAGhB,IAAI,CAACkB,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI;IACjDpB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEoB,IAAI,CAAC;IAC1C,OAAOA,IAAI;EACb;AACF,CAAC;AAED,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}